(define (domain gripper-strips)
    (:constants rooma roomb)
    (:predicates
        (room ?r)
        (ball ?b)
        (gripper ?g)
        (at-robby ?r)
        (at ?b ?r)
        (free ?g)
        (carry ?o ?g)
        (markable-0 ?x)
        (markable-1 ?x)
        (mark-0 ?x)
        (mark-1 ?x)
        (mark ?x)
        (some-mark-0)
        (some-mark-1)
    )
    (:action move
        :parameters (?from ?to)
        :precondition (and (room ?from) (room ?to) (at-robby ?from))
        :effect (and (at-robby ?to) (not (at-robby ?from)))
    )
    (:action pick
        :parameters (?obj ?room ?gripper)
        :precondition (and (ball ?obj) (room ?room) (gripper ?gripper) (at ?obj ?room) (at-robby ?room) (free ?gripper) (mark ?obj) (mark ?gripper))
        :effect (and (carry ?obj ?gripper) (not (at ?obj ?room)) (not (free ?gripper)))
    )
    (:action drop
        :parameters (?obj ?room ?gripper)
        :precondition (and (ball ?obj) (room ?room) (gripper ?gripper) (carry ?obj ?gripper) (at-robby ?room) (mark ?obj) (mark ?gripper))
        :effect (and (at ?obj ?room) (free ?gripper) (not (carry ?obj ?gripper)))
    )
    (:action mark-0
        :parameters (?x)
        :precondition (and (markable-0 ?x) (not (mark ?x)) (not (some-mark-0)))
        :effect (and (mark-0 ?x) (not (markable-0 ?x)) (mark ?x) (some-mark-0) (forall (?z) (and (markable-1 ?z) (when (mark-1 ?z) (and (not (mark-1 ?z)) (not (mark ?z)))))) (not (some-mark-1)))
    )
    (:action mark-1
        :parameters (?x)
        :precondition (and (markable-1 ?x) (not (mark ?x)) (not (some-mark-1)) (some-mark-0))
        :effect (and (mark-1 ?x) (not (markable-1 ?x)) (mark ?x) (some-mark-1))
    )
    (:action move-mark-0
        :parameters (?x ?y)
        :precondition (and (mark-0 ?x) (markable-0 ?y) (not (mark ?y)))
        :effect (and (not (mark-0 ?x)) (not (mark ?x)) (mark-0 ?y) (not (markable-0 ?y)) (mark ?y) (forall (?z) (and (markable-1 ?z) (when (mark-1 ?z) (and (not (mark-1 ?z)) (not (mark ?z)))))) (not (some-mark-1)))
    )
    (:action move-mark-1
        :parameters (?x ?y)
        :precondition (and (mark-1 ?x) (markable-1 ?y) (not (mark ?y)))
        :effect (and (not (mark-1 ?x)) (not (mark ?x)) (mark-1 ?y) (not (markable-1 ?y)) (mark ?y))
    )
)
